{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../../../hotel-abroad/index.ts"],"names":[],"mappings":"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","sourcesContent":["var database = require(\"@jingli/database\");\nvar moment = require(\"moment\");\nimport {DB} = require(\"@jingli/database\");\nimport {getCityInfo} from \"@jingli/utils\"\n\ndatabase.init();\n\nexport function initDB(dbUrl:string){\n    database.init(dbUrl);\n}\n\n/*\n countryid, countryname, cityid, cityname, hotelname, hotelprice, hotelstar, checkindate, checkoutdate\n\n create table hotels.tfhotels(\n   countryId varchar(50),\n   countryname varchar(50),\n   cityid varchar(50),\n   cityname varchar(50),\n   hotelname varchar(100),\n   hotelprice numeric,\n   hotelstar integer,\n   checkindate varchar(50),\n   checkoutdate varchar(50)\n );\n\n */\n\nexport async function format_data(body?: any, querystring?:any, storage?:any){\n    let {_checkinDate, _checkoutDate,cityid} = querystring;\n    let cityInfo = await getCityInfo({cityId: cityid});\n    let parentInfo = await getCityInfo({cityId: cityInfo.parentId});\n\n    let _hotels = body.htlInfos;\n    for(let _hotel of _hotels) {\n        let _basicInfo = _hotel['baseInfo'];\n        let _activeinfo = _hotel['activeinfo'];\n        let _prices = _hotel['prices'];\n        let _lowestPrice = -1;\n        for(var _price of _prices) {\n            if (_price.pbiz == 2) {\n                _lowestPrice = _price.detail.price;\n                _lowestPrice = Math.round(_lowestPrice*1.15);  //国际酒店增加15%的税费\n                break;\n            }\n        }\n        let _latitude = 0;\n        let _longitude = 0;\n        if (_activeinfo.geos && _activeinfo.geos.length) {\n            _latitude = _activeinfo.geos[0]['lat'];\n            _longitude = _activeinfo.geos[0]['lon'];\n        }\n        //携程改版，返回酒店均价\n        let checkInDate = moment(_checkinDate).hour(12);\n        let checkOutDate = moment(_checkoutDate).hour(12);\n        let interval = moment(checkOutDate).diff(checkInDate,'days') || 1;\n        _lowestPrice = _lowestPrice * interval;\n\n        let insertSql = `insert into ${storage} values('${parentInfo.id}',${parentInfo.name}', '${cityInfo.id}', '${cityInfo.name}','${_basicInfo.name}', ${_lowestPrice}','${_activeinfo.star}',${_checkinDate}', '${_checkoutDate}'})`;\n        try{\n            await DB.query(insertSql);\n        }catch(err){\n            console.log(err);\n        }\n    }\n}"]}