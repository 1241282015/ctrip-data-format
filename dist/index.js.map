{"version":3,"file":"index.js","sourceRoot":"","sources":["../hotel-abroad/index.ts"],"names":[],"mappings":";AAAA,IAAI,QAAQ,GAAG,OAAO,CAAC,kBAAkB,CAAC,CAAC;AAC3C,IAAI,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC/B,yBAA0C;AAG1C,QAAQ,CAAC,IAAI,EAAE,CAAC;AAEhB,gBAAuB,KAAY;IAC/B,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACzB,CAAC;AAFe,cAAM,SAErB,CAAA;AAED,qBAA4B,IAAU,EAAE,WAAgB,EAAE,OAAY;IAC7D,2CAAY,EAAE,yCAAa,EAAC,2BAAM,CAAgB;IAGvD,IAAI,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC;IAC5B,GAAG,CAAA,CAAe,UAAO,EAAP,mBAAO,EAAP,qBAAO,EAAP,IAAO,CAAC;QAAtB,IAAI,MAAM,gBAAA;QACV,IAAI,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC;QACpC,IAAI,WAAW,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC;QACvC,IAAI,OAAO,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC;QAC/B,IAAI,YAAY,GAAG,CAAC,CAAC,CAAC;QACtB,GAAG,CAAA,CAAe,UAAO,EAAP,mBAAO,EAAP,qBAAO,EAAP,IAAO,CAAC;YAAtB,IAAI,MAAM,gBAAA;YACV,EAAE,CAAC,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;gBACnB,YAAY,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC;gBACnC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,GAAC,IAAI,CAAC,CAAC,CAAE,cAAc;gBAC7D,KAAK,CAAC;YACV,CAAC;SACJ;QACD,IAAI,SAAS,GAAG,CAAC,CAAC;QAClB,IAAI,UAAU,GAAG,CAAC,CAAC;QACnB,EAAE,CAAC,CAAC,WAAW,CAAC,IAAI,IAAI,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;YAC9C,SAAS,GAAG,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;YACvC,UAAU,GAAG,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;QAC5C,CAAC;QACD,aAAa;QACb,IAAI,WAAW,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QAChD,IAAI,YAAY,GAAG,MAAM,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QAClD,IAAI,QAAQ,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,WAAW,EAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAClE,YAAY,GAAG,YAAY,GAAG,QAAQ,CAAC;QAGvC,IAAG,CAAC;YACA,MAAM,WAAE,CAAC,KAAK,CAAC,iBAAe,OAAO,eAAY,CAAC,CAAC;QACvD,CAAC;QAAA,KAAK,CAAA,CAAC,GAAG,CAAC,CAAA,CAAC;YACR,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACrB,CAAC;KAgBJ;AAEL,CAAC;AApDe,mBAAW,cAoD1B,CAAA","sourcesContent":["var database = require(\"@jingli/database\");\nvar moment = require(\"moment\");\nimport {DB} = require(\"@jingli/database\");\nimport {get} from \"@jingli/\"\n\ndatabase.init();\n\nexport function initDB(dbUrl:string){\n    database.init(dbUrl);\n}\n\nexport function format_data(body?: any, querystring?:any, storage?:any){\n    let {_checkinDate, _checkoutDate,cityid} = querystring;\n    \n    \n    let _hotels = body.htlInfos;\n    for(let _hotel of _hotels) {\n        let _basicInfo = _hotel['baseInfo'];\n        let _activeinfo = _hotel['activeinfo'];\n        let _prices = _hotel['prices'];\n        let _lowestPrice = -1;\n        for(var _price of _prices) {\n            if (_price.pbiz == 2) {\n                _lowestPrice = _price.detail.price;\n                _lowestPrice = Math.round(_lowestPrice*1.15);  //国际酒店增加15%的税费\n                break;\n            }\n        }\n        let _latitude = 0;\n        let _longitude = 0;\n        if (_activeinfo.geos && _activeinfo.geos.length) {\n            _latitude = _activeinfo.geos[0]['lat'];\n            _longitude = _activeinfo.geos[0]['lon'];\n        }\n        //携程改版，返回酒店均价\n        let checkInDate = moment(_checkinDate).hour(12);\n        let checkOutDate = moment(_checkoutDate).hour(12);\n        let interval = moment(checkOutDate).diff(checkInDate,'days') || 1;\n        _lowestPrice = _lowestPrice * interval;\n\n\n        try{\n            await DB.query(`insert into ${storage} values();`);\n        }catch(err){\n            console.log(err);\n        }\n\n\n\n\n\n        // _retHotels.push({\n        //     name: _basicInfo.name,\n        //     shortName: _basicInfo.shrtName,\n        //     star: _activeinfo.star,\n        //     latitude: _latitude,\n        //     longitude: _longitude,\n        //     checkInDate:_checkinDate,\n        //     checkOutDate:_checkoutDate,\n        //     agents: [ {name: 'ctrip', price: _lowestPrice}]\n        // } as IHotel);\n    }\n\n}"]}